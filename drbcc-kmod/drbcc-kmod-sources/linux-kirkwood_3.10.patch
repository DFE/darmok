From 0597cd7b9a846d26149099c52644efa719143714 Mon Sep 17 00:00:00 2001
From: Mario Schuknecht <mario.schuknecht@dresearch-fe.de>
Date: Wed, 27 Nov 2013 09:40:07 +0100
Subject: [PATCH] Inject N_BCC into standard Linux kernel code

Signed-off-by: Mario Schuknecht <mario.schuknecht@dresearch-fe.de>
---
 drivers/Kconfig          |  2 ++
 drivers/Makefile         |  1 +
 drivers/tty/tty_io.c     | 19 ++++++++++++++++++-
 drivers/tty/tty_ldisc.c  |  8 ++++++--
 fs/char_dev.c            |  3 ++-
 include/linux/tty.h      |  2 +-
 include/uapi/linux/tty.h |  1 +
 7 files changed, 31 insertions(+), 5 deletions(-)

diff --git a/drivers/Kconfig b/drivers/Kconfig
index 9953a42..b278cf1 100644
--- a/drivers/Kconfig
+++ b/drivers/Kconfig
@@ -108,6 +108,8 @@ source "drivers/edac/Kconfig"
 
 source "drivers/rtc/Kconfig"
 
+source "drivers/darmok/Kconfig"
+
 source "drivers/dma/Kconfig"
 
 source "drivers/dca/Kconfig"
diff --git a/drivers/Makefile b/drivers/Makefile
index 130abc1..eb01780 100644
--- a/drivers/Makefile
+++ b/drivers/Makefile
@@ -91,6 +91,7 @@ obj-$(CONFIG_GAMEPORT)		+= input/gameport/
 obj-$(CONFIG_INPUT)		+= input/
 obj-$(CONFIG_I2O)		+= message/
 obj-$(CONFIG_RTC_LIB)		+= rtc/
+obj-$(CONFIG_DARMOK_CORE)	+= darmok/
 obj-y				+= i2c/ media/
 obj-$(CONFIG_PPS)		+= pps/
 obj-$(CONFIG_PTP_1588_CLOCK)	+= ptp/
diff --git a/drivers/tty/tty_io.c b/drivers/tty/tty_io.c
index 4476682..10cdcea 100644
--- a/drivers/tty/tty_io.c
+++ b/drivers/tty/tty_io.c
@@ -3008,10 +3008,27 @@ static struct device *tty_get_device(struct tty_struct *tty)
 void initialize_tty_struct(struct tty_struct *tty,
 		struct tty_driver *driver, int idx)
 {
+#ifdef CONFIG_DARMOK_CORE
+	dev_t dev;
+#endif
 	memset(tty, 0, sizeof(struct tty_struct));
 	kref_init(&tty->kref);
 	tty->magic = TTY_MAGIC;
-	tty_ldisc_init(tty);
+#ifdef CONFIG_DARMOK_CORE
+	dev = MKDEV(driver->major, driver->minor_start);
+	if (!strcmp(driver->name, "ttyUSB") && ((idx + driver->name_base) == 1)) {
+		printk(KERN_DEBUG "Add ldisc N_BCC to drv_name = %s, %s%d, (MAJ: %d, MIN: %d)\n",
+				driver->driver_name, driver->name, idx+driver->name_base, MAJOR(dev), MINOR(dev));
+		tty_ldisc_init(tty, N_BCC);
+	} else {
+		tty_ldisc_init(tty, N_TTY);
+		printk(KERN_DEBUG "Add ldisc N_TTY to drv_name = %s, %s%d, (MAJ: %d, MIN: %d)\n",
+				driver->driver_name, driver->name, idx+driver->name_base, MAJOR(dev), MINOR(dev));
+	}
+#else
+	tty_ldisc_init(tty, N_TTY);
+#endif
+
 	tty->session = NULL;
 	tty->pgrp = NULL;
 	mutex_init(&tty->legacy_mutex);
diff --git a/drivers/tty/tty_ldisc.c b/drivers/tty/tty_ldisc.c
index 1afe192..1a2792d 100644
--- a/drivers/tty/tty_ldisc.c
+++ b/drivers/tty/tty_ldisc.c
@@ -953,9 +953,13 @@ void tty_ldisc_release(struct tty_struct *tty, struct tty_struct *o_tty)
  *	the tty structure is not completely set up when this call is made.
  */
 
-void tty_ldisc_init(struct tty_struct *tty)
+void tty_ldisc_init(struct tty_struct *tty, int disc)
 {
-	struct tty_ldisc *ld = tty_ldisc_get(N_TTY);
+	struct tty_ldisc *ld;
+	if (disc < N_TTY || disc >= NR_LDISCS)
+		panic("tty_ldisc: Unknown Ldisc");
+
+	ld = tty_ldisc_get(disc);
 	if (IS_ERR(ld))
 		panic("n_tty: init_tty");
 	tty->ldisc = ld;
diff --git a/fs/char_dev.c b/fs/char_dev.c
index afc2bb6..127bc59 100644
--- a/fs/char_dev.c
+++ b/fs/char_dev.c
@@ -366,7 +366,7 @@ void cdev_put(struct cdev *p)
 /*
  * Called every time a character special file is opened
  */
-static int chrdev_open(struct inode *inode, struct file *filp)
+int chrdev_open(struct inode *inode, struct file *filp)
 {
 	struct cdev *p;
 	struct cdev *new = NULL;
@@ -583,6 +583,7 @@ EXPORT_SYMBOL(register_chrdev_region);
 EXPORT_SYMBOL(unregister_chrdev_region);
 EXPORT_SYMBOL(alloc_chrdev_region);
 EXPORT_SYMBOL(cdev_init);
+EXPORT_SYMBOL(chrdev_open);
 EXPORT_SYMBOL(cdev_alloc);
 EXPORT_SYMBOL(cdev_del);
 EXPORT_SYMBOL(cdev_add);
diff --git a/include/linux/tty.h b/include/linux/tty.h
index 8780bd2..68d75d2 100644
--- a/include/linux/tty.h
+++ b/include/linux/tty.h
@@ -558,7 +558,7 @@ extern int tty_unregister_ldisc(int disc);
 extern int tty_set_ldisc(struct tty_struct *tty, int ldisc);
 extern int tty_ldisc_setup(struct tty_struct *tty, struct tty_struct *o_tty);
 extern void tty_ldisc_release(struct tty_struct *tty, struct tty_struct *o_tty);
-extern void tty_ldisc_init(struct tty_struct *tty);
+extern void tty_ldisc_init(struct tty_struct *tty, int disc);
 extern void tty_ldisc_deinit(struct tty_struct *tty);
 extern void tty_ldisc_begin(void);
 
diff --git a/include/uapi/linux/tty.h b/include/uapi/linux/tty.h
index dac199a..7a14c20 100644
--- a/include/uapi/linux/tty.h
+++ b/include/uapi/linux/tty.h
@@ -34,5 +34,6 @@
 #define N_TI_WL		22	/* for TI's WL BT, FM, GPS combo chips */
 #define N_TRACESINK	23	/* Trace data routing for MIPI P1149.7 */
 #define N_TRACEROUTER	24	/* Trace data routing for MIPI P1149.7 */
+#define N_BCC		25	/* for serial board controller communication */
 
 #endif /* _UAPI_LINUX_TTY_H */
-- 
1.8.1.4

